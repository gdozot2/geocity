# Generated by Django 3.2.15 on 2022-09-27 10:50
import os
import shutil
import tempfile

from django.conf import settings
from django.db import migrations
from django.template.defaultfilters import slugify

import geocity.apps.permits.fields


def archive_to_filefield(apps, schema_editor):
    """This zips the content of the old archive folder and attaches it to the new
    archive file field."""

    ArchivedPermitRequest = apps.get_model("permits", "ArchivedPermitRequest")
    PermitRequest = apps.get_model("permits", "PermitRequest")

    def get_works_type_names_list(self):
        return ", ".join(
            list(
                self.works_object_types.all()
                .values_list("works_type__name", flat=True)
                .distinct()
            )
        )

    PermitRequest.get_works_type_names_list = get_works_type_names_list

    # for archived_request in ArchivedPermitRequest.objects.all():
    #     # make the archive
    #     with tempfile.TemporaryDirectory() as tmp_dir:

    #         archived_date = archived_request.archived_date.strftime("%d.%m.%Y.%H.%M.%S")
    #         old_name = f"{archived_request.permit_request.id:02d}_{archived_date}-{slugify(archived_request.permit_request.get_works_type_names_list())}"
    #         old_path = os.path.join(settings.ARCHIVE_ROOT, old_name)

    #         old_path_zipped = shutil.make_archive(
    #             os.path.join(tmp_dir, "archive"), "zip", old_path
    #         )

    #         archived_request.archive.save("archive.zip", open(old_path_zipped, "rb"))
    #         archived_request.save()


class Migration(migrations.Migration):

    dependencies = [
        ("permits", "0082_add_visible_by_validators_for_amend_property"),
    ]

    operations = [
        migrations.AddField(
            model_name="archivedpermitrequest",
            name="archive",
            field=geocity.apps.permits.fields.ArchiveDocumentFileField(
                default="CHANGEME",
                storage=geocity.apps.permits.fields.PrivateFileSystemStorage(),
                upload_to="",
                verbose_name="Archive",
            ),
            preserve_default=False,
        ),
        migrations.RunPython(archive_to_filefield),
    ]
