# Generated by Django 4.1.4 on 2023-02-01 13:26

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import geocity.apps.reports.fields
import geocity.apps.reports.models
import geocity.fields


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        (
            "reports",
            "0019_alter_complementarydocumenttypeforadminsite_options_and_more",
        ),
    ]

    operations = [
        migrations.CreateModel(
            name="Style",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        choices=[
                            ("@bottom-center", "Pied de page - Centre"),
                            ("@bottom-left", "Pied de page - Gauche"),
                            ("@bottom-left-corner", "Pied de page - Coin gauche"),
                            ("@bottom-right", "Pied de page - Droite"),
                            ("@bottom-right-corner", "Pied de page - Coin Droite"),
                            ("@left-bottom", "Bordure gauche - Bas de page"),
                            ("@left-middle", "Bordure gauche - Milieu de page"),
                            ("@left-top", "Bordure gauche - Haut de page"),
                            ("@right-bottom", "Bordure droite - Bas de page"),
                            ("@right-middle", "Bordure droite - Milieu de page"),
                            ("@right-top", "Bordure droite - Haut de page"),
                            ("@top-center", "En-tête - Centre"),
                            ("@top-left", "En-tête - Gauche"),
                            ("@top-left-corner", "En-tête - Coin gauche"),
                            ("@top-right", "En-tête - Droite"),
                            ("@top-right-corner", "En-tête - Coin Droite"),
                        ],
                        default="@bottom-center",
                        max_length=255,
                        verbose_name="Emplacement",
                    ),
                ),
                (
                    "font_size",
                    models.PositiveIntegerField(
                        default=10,
                        help_text="Taille de la police (en pixels). S'applique seulement à l'emplacement sélectionné",
                        verbose_name="Taille de la police",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_%(app_label)s.%(class)s_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=geocity.apps.reports.models.NON_POLYMORPHIC_CASCADE,
                        related_name="styles",
                        to="reports.report",
                    ),
                ),
            ],
            options={
                "verbose_name": "Style",
                "verbose_name_plural": "Styles",
            },
        ),
        migrations.RenameField(
            model_name="reportlayout",
            old_name="font",
            new_name="font_family",
        ),
        migrations.AddField(
            model_name="reportlayout",
            name="font_size",
            field=models.PositiveIntegerField(
                default=12,
                help_text="Taille de la police (en pixels). S'applique à tout le document",
                verbose_name="Taille de la police",
            ),
        ),
        migrations.AlterField(
            model_name="reportlayout",
            name="margin_bottom",
            field=models.PositiveIntegerField(default=15, verbose_name="Marge: bas"),
        ),
        migrations.AlterField(
            model_name="reportlayout",
            name="margin_top",
            field=models.PositiveIntegerField(default=25, verbose_name="Marge: haut"),
        ),
        migrations.CreateModel(
            name="StyleDateTime",
            fields=[
                (
                    "style_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reports.style",
                    ),
                ),
            ],
            options={
                "verbose_name": "Date et heure",
            },
            bases=("reports.style",),
        ),
        migrations.CreateModel(
            name="StyleLogo",
            fields=[
                (
                    "style_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reports.style",
                    ),
                ),
                (
                    "logo",
                    geocity.apps.reports.fields.BackgroundFileField(
                        help_text="Image pour logo (PNG).",
                        storage=geocity.fields.PrivateFileSystemStorage(),
                        upload_to="backgound_paper",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["png"]
                            )
                        ],
                        verbose_name="Logo",
                    ),
                ),
                (
                    "height",
                    models.PositiveIntegerField(
                        default=60,
                        help_text="Défini la taille de l'image en %. Choisir un nombre compris entre 0 et 100",
                        verbose_name="Hauteur",
                    ),
                ),
            ],
            options={
                "verbose_name": "Logo",
            },
            bases=("reports.style",),
        ),
        migrations.CreateModel(
            name="StylePageNumber",
            fields=[
                (
                    "style_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reports.style",
                    ),
                ),
            ],
            options={
                "verbose_name": "Numéro de page",
            },
            bases=("reports.style",),
        ),
        migrations.CreateModel(
            name="StyleParagraph",
            fields=[
                (
                    "style_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="reports.style",
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        help_text="Texte à afficher",
                        max_length=1024,
                        verbose_name="Contenu",
                    ),
                ),
            ],
            options={
                "verbose_name": "Texte libre",
            },
            bases=("reports.style",),
        ),
    ]
