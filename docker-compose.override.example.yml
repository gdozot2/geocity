# Docker-compose override examples
# ================================
#
# Make a copy of this file and name it `docker-compose.override.yml`, then
# choose one among the following configurations and uncomment the lines.
# Finally cross your fingers and run `docker-compose up`.
#
#version: "3.4"
#
#services:
#    web:
#        image: gms_web
#        tty: true
#        stdin_open: true
#        restart: unless-stopped
#        depends_on:
#            - "qgisserver"
#            - "postgres"
#        build:
#            context: ./
#            args:
#                dev_dependencies: "${DEV_DEPENDENCIES}"
#        command: "python3 manage.py runserver 0.0.0.0:9000"
#        volumes:
#            # If you aren't working in a DEV environment, you can remove/comment this line
#            - - .:/code
#            - ./private_documents:/private_documents
#        ports:
#            - "${DJANGO_DOCKER_PORT}:9000"
#        environment:
#            # If you aren't working in a DEV environment, you can remove/comment this line
#            DJANGO_SETTINGS_MODULE: geomapshark.settings_dev
#            # if it's the first time your starting the containers, set this to 1
#            INITIAL: 1
#            # Possible values : DEV, DEMO or PROD
#            ENV: DEV
#
# PONTSUN CONFIGURATION
# ~~~~~~~~~~~~~~~~~~~~~
#
# Set up pontsun (https://github.com/liip/pontsun) and start it. Then visit
# https://geocity.docker.test/ to access dev server.
#        networks:
#             - default
#             - pontsun
#        labels:
#            - 'traefik.enable=true'
#            - 'traefik.docker.network=pontsun'
#            - 'traefik.backend=geocity'
#            - 'traefik.port=9000'
#            - 'traefik.frontend.rule=Host:geocity.docker.test'
# --------------------- END PONTSUN CONFIGURATION
#
#    qgisserver:
#        image: openquake/qgis-server:3.22
#        restart: unless-stopped
#        volumes:
#            - ./qgisserver/geocity.qgs:/io/data/geocity.qgs:ro #default qgis project for mask layer
#            - ./qgisserver/report_template.qgs:/io/data/report_template.qgs:ro
#            - ./qgisserver/plugins/geocity_expressions:/io/plugins/geocity_expressions
#            - ./qgisserver/plugins/atlasprint:/io/plugins/atlasprint
#            - ./qgisserver/pg_service.conf:/etc/postgresql-common/pg_service.conf:ro
#            - ./private_documents:/private_documents #used to access to the private documents via a volume (check .env.demo) search(ctrl+f) -> #access_to_private_document_local
#        ports:
#            - "${QGISSERVER_DOCKER_PORT}:80"
#        environment:
#            - QGIS_SERVER_PARALLEL_RENDERING=true
#            - QGIS_SERVER_IGNORE_BAD_LAYERS=true
#            - QGIS_SERVER_LOG_LEVEL=0
#            - PREFIX_URL
#
#    postgres:
#        image: postgis/postgis:13-3.2
#        environment:
#            - POSTGRES_USER=${PGUSER}
#            - POSTGRES_PASSWORD=${PGPASSWORD}
#            - POSTGRES_DB=${PGDATABASE}
#        ports:
#            - "${POSTGRES_DOCKER_PORT}:5432"
#        volumes:
#            - pgdata:/var/lib/postgresql/data
#
#    mailhog:
#        container_name: mailhog
#        tty: true
#        image: mailhog/mailhog
#        logging:
#            driver: 'none'  # disable saving logs
#        ports:
#            - 1025:1025 # smtp server
#            - 8025:8025 # web ui
# PONTSUN CONFIGURATION
# ~~~~~~~~~~~~~~~~~~~~~
#        networks:
#           - default
#           - pontsun
#        labels:
#            - 'traefik.enable=true'
#            - 'traefik.docker.network=pontsun'
#            - 'traefik.backend=geocity_mail'
#            - 'traefik.port=8025'
#            - 'traefik.frontend.rule=Host:geocity-mail.docker.test'
# --------------------- END PONTSUN CONFIGURATION
#
#volumes:
#    pgdata:
#
#networks:
#  pontsun:
#    external:
#      name: pontsun
