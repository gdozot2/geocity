# Generated by Django 3.2.13 on 2022-06-09 13:37

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import permits.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PrintBlockAuthors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PrintBlockContacts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Liste des contacts')),
            ],
        ),
        migrations.CreateModel(
            name='PrintBlockCustom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Il est possible d\'accéder aux données de l\'API avec la syntaxe suivante: `{{data.properties.geotime_aggregated.start_date}}`. Consultez les résults de <a href="http://localhost:9095/wfs3/collections/permits/items/1">l\'API</a> pour voir les données disponibles.\nATTENTION: l\'accès à ce type de bloc doit être réservé aux utilisateurs approuvés puisque l\'implémentation actuelle n\'est pas sécurisée.')),
            ],
        ),
        migrations.CreateModel(
            name='PrintBlockDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PrintBlockMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qgis_project_file', permits.fields.AdministrativeEntityFileField(storage=permits.fields.PrivateFileSystemStorage(), upload_to='qgis_templates', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['qgs'])], verbose_name="Projet QGIS '*.qgs'")),
                ('qgis_print_template_name', models.CharField(help_text="ATTENTION: l'accès à ce type de bloc doit être réservé aux utilisateurs approuvés puisque l'implémentation actuelle n'est pas sécurisée.", max_length=150, verbose_name="Nom du template d'impression QGIS")),
            ],
        ),
        migrations.CreateModel(
            name='PrintBlockPlanning',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PrintBlockRichText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor.fields.RichTextField(help_text='Il est possible d\'accéder aux données de l\'API avec la syntaxe suivante: `{{data.properties.geotime_aggregated.start_date}}`. Consultez les résults de <a href="http://localhost:9095/wfs3/collections/permits/items/1">l\'API</a> pour voir les données disponibles.\nATTENTION: l\'accès à ce type de bloc doit être réservé aux utilisateurs approuvés puisque l\'implémentation actuelle n\'est pas sécurisée.')),
            ],
        ),
        migrations.CreateModel(
            name='PrintBlockValidation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
            ],
        ),
    ]
